version: 2.1

executors:
  unity_exec:
    docker:
      - image: unityci/editor:2019.4.32f1-linux-il2cpp-0.15
      #- image: unityci/editor:2019.4.32f1-windows-mono-0.15
    environment:
      BUILD_NAME: vr-debugging

.build: &build
  executor: unity_exec
  steps:
    - checkout
    #- run:
    #    name: Fetching build scripts
    #    command: |
    #      apt update && apt install -y git 
    #      git clone https://github.com/qwertyuu/unity-ci-build-scripts.git
    #- run:
    #    name: Getting build scripts for your unity version if possible
    #    command: UNITY_VERSION=2018.3.4f1; if [ $(git ls-remote https://github.com/qwertyuu/unity-ci-build-scripts.git "$UNITY_VERSION" | wc -l) -eq 1 ]; then cd unity-ci-build-scripts && git pull origin "$UNITY_VERSION" && cd ..; fi
    #- run:
    #    name: Injecting build scripts into the project
    #    command: |
    #      cp -r unity-ci-build-scripts/Assets/Editor ./Assets
    #      cp -r unity-ci-build-scripts/ci ./ci
    - run:
        name: Converting Unity license
        command: chmod +x ./ci/before_script.sh && bash ./ci/before_script.sh
    - run: ls -ls /usr/bin/python*
    - run:
        name: Building game binaries
        command: chmod +x ./ci/build.sh && ./ci/build.sh
    - run:
        name: Zipping build
        command: apt update && apt -y install zip && zip -r "vr-debugging-$BUILD_TARGET.zip" ./Builds/
    - store_artifacts:
        path: vr-debugging-$BUILD_TARGET.zip

jobs:
  activate:
    executor: unity_exec
    steps:
      - checkout
      - run:
          name: get activation file
          command: chmod +x ./ci/activation.sh && ./ci/activation.sh
  build_windows:
    <<: *build
    environment:
      BUILD_TARGET: StandaloneWindows64
  deploy:
    docker:
      - image: debian/debian:latest
    steps:
      - run:
          name: install deploy requirements
          command: sudo apt-get -y update && sudo apt-get -y install unzip wget
      - run:
          name: install butler
          command: curl -L -o butler.zip https://broth.itch.ovh/butler/linux-amd64/LATEST/archive/default && unzip -o butler.zip && chmod +x butler && ./butler -V
      - run:
          name: upload game
          command: ./butler push vr-debugging-$BUILD_TARGET.zip seredos/vr-debugging:linux-channel

workflows:
  build-workflow:
    jobs:
      #- activate
      - build_windows
      - deploy:
          requires:
            - build_windows
